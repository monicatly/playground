HW 2 afni_proc

Constructed timing files using make_timings.py and timing_tool.py to drop 1st TR

Experiment 1: 
	Dice Coefficient: .1978 - not good

Experiment 2:
	Without motion censoring and regression - Dice Coefficient: .2200
	With a smaller smoothing kernel - Dice Coefficient: .2745
	Using 3dREMLfit - Dice Coefficient: .1978

Edit (8/29/2017)
The above was done assuming sub-brick 17 was the correct statistic, but it probably wasn't. Instead, I used stats.sub_03+tlrc['L-D_GLT#0_Tstat']

Below is everything redone using the correct sub-brick.
Experiment 1:
	Dice Coefficient: .05296 - quite bad

Experiment 2:
	Without motion censoring and regression - Dice Coefficient: .02986 - much lower
		This makes sense, since leaving in bad motion volumes would decrease the similarity/reliability between the two samples
	With a smaller smoothing kernel - Dice Coefficient: .05976 - not much different
		I would expect a smaller smoothing kernel to result in a smaller Dice coefficient because the data would be noisier in each sample
	Using 3dREMLfit - Dice Coefficient: .00205 - much much lower

Edit (8/30/2017)
Hopefully the last attempt. Edited make_timings.py to create 3 timing files (separating landmark correct and incorrect)
Contrast: .5*landmark_correct .5*landmark_incorrect -detection

Experiment 1:
	Dice Coefficient: .1676
Experiment 2:
	With a smaller smoothing kernel - Dice Coefficient: .1359
		Lower, as expected. 

Edit (8/31/2017)
Edited make_timings.py to create 5 timing files for each condition. All 5 stimulus files were entered into uber_subject.py. Same contrast.

Experiment 1:
	Dice Coefficient: .1381

Edit (9/3/2017). FINALLY.
Re-ran changing basis function from BLOCK(16.25) to GAM
Experiment 1:
	Dice Coefficient: .1987
Experiment 2: With smoothing kernel of 3mm FWHM
	Dice Coefficient: .1615
